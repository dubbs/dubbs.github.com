<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ssh | Kevin Warrington]]></title>
  <link href="http://dubbs.github.io/blog/categories/ssh/atom.xml" rel="self"/>
  <link href="http://dubbs.github.io/"/>
  <updated>2014-09-11T09:52:54-06:00</updated>
  <id>http://dubbs.github.io/</id>
  <author>
    <name><![CDATA[Kevin Warrington]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SSH Config and Agent Forwarding]]></title>
    <link href="http://dubbs.github.io/blog/2014/09/10/ssh-config-and-agent-forwarding/"/>
    <updated>2014-09-10T21:50:59-06:00</updated>
    <id>http://dubbs.github.io/blog/2014/09/10/ssh-config-and-agent-forwarding</id>
    <content type="html"><![CDATA[<p>Quick guide to setting up ssh config and agent forwarding.</p>

<h2>1. Setup remote server</h2>

<p>Enable authorized keys on remote, <code>/etc/sshd_config</code>:</p>

<pre><code>AuthorizedKeysFile  .ssh/authorized_keys
</code></pre>

<h2>2. Setup client keys</h2>

<p>Generate an ssh key</p>

<pre><code>ssh-keygen -t rsa
</code></pre>

<p>Copy public key to remote server</p>

<pre><code>ssh-copy-id -i ~/.ssh/id_rsa.pub user@example.com
</code></pre>

<p>Test connection using private key</p>

<pre><code>ssh -i ~/.ssh/id_rsa user@example.com date
</code></pre>

<h2>3. Setup client config</h2>

<p>This allows for separate ssh configuration per host:</p>

<pre><code>touch ~/.ssh/config
chmod 600 ~/.ssh/config
</code></pre>

<p>Add the following to <code>~/.ssh/config</code>:</p>

<pre><code>Host remoteServer1
HostName example.com
User user
PubkeyAuthentication yes
IdentityFile ~/.ssh/id_rsa
</code></pre>

<p>Test the connection:</p>

<pre><code>ssh remoteServer1 date
</code></pre>

<h2>4. Setup agent forwarding</h2>

<p><code>ssh-agent</code> is a user daemon which holds unencrypted ssh keys in memory.  This saves you from having to supply your passphrase for each connection.</p>

<p>Update <code>~/.ssh/config</code>:</p>

<pre><code>Host remoteServer1
...
ForwardAgent yes
</code></pre>

<p>Verify ssh-agent is running:</p>

<pre><code>echo "$SSH_AUTH_SOCK"
</code></pre>

<p>Verify your public key available to ssh-agent:</p>

<pre><code>ssh-add -L
</code></pre>

<p>If not, add a specific identity:</p>

<pre><code>ssh-add ~/.ssh/id_project1
</code></pre>

<h3>Resources:</h3>

<p><a href="http://www.unixwiz.net/techtips/ssh-agent-forwarding.html  ">http://www.unixwiz.net/techtips/ssh-agent-forwarding.html  </a>
<a href="https://developer.github.com/guides/using-ssh-agent-forwarding/  ">https://developer.github.com/guides/using-ssh-agent-forwarding/  </a>
<a href="http://nerderati.com/2011/03/17/simplify-your-life-with-an-ssh-config-file/  ">http://nerderati.com/2011/03/17/simplify-your-life-with-an-ssh-config-file/  </a>
<a href="https://kimmo.suominen.com/docs/ssh/  ">https://kimmo.suominen.com/docs/ssh/  </a>
<a href="http://blogs.perl.org/users/smylers/2011/08/ssh-productivity-tips.html">http://blogs.perl.org/users/smylers/2011/08/ssh-productivity-tips.html</a></p>
]]></content>
  </entry>
  
</feed>
