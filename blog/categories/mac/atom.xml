<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Mac | Kevin Warrington]]></title>
  <link href="http://dubbs.github.io/blog/categories/mac/atom.xml" rel="self"/>
  <link href="http://dubbs.github.io/"/>
  <updated>2015-07-03T11:21:06-06:00</updated>
  <id>http://dubbs.github.io/</id>
  <author>
    <name><![CDATA[Kevin Warrington]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Manipulating Unix Routing Tables]]></title>
    <link href="http://dubbs.github.io/blog/2015/02/07/manipulating-unix-routing-tables/"/>
    <updated>2015-02-07T12:25:20-06:00</updated>
    <id>http://dubbs.github.io/blog/2015/02/07/manipulating-unix-routing-tables</id>
    <content type="html"><![CDATA[<p>For one of our latest projects, we needed to restrict incoming connections on the destination server prior to launching the our website.</p>

<p>So, we had our developers route their traffic through a VPN gateway by adding entries to the routing table:</p>

<pre><code class="bash">sudo route -nv add IP_DESTINATION IP_GATEWAY
</code></pre>

<p>You can verify the route was added by using <code>netstat</code></p>

<pre><code class="bash">netstat -rn
# Routing tables
#
# Internet:
# Destination        Gateway            Flags        Refs      Use   Netif Expire
# IP_DESTINATION     IP_GATEWAY         UGHS            0        0     en0
</code></pre>

<p>You can verify the connection is going through the vpn by using <code>traceroute</code></p>

<pre><code class="bash">traceroute IP_DESTINATION
# traceroute to IP_DESTINATION, 64 hops max, 52 byte packets
#  1  IP_GATEWAY  1.586 ms  2.257 ms  0.885 ms
</code></pre>

<p>You can remove the route by using the delete option</p>

<pre><code class="bash">sudo route delete IP_DESTINATION
# delete host IP_DESTINATION
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Flush DNS]]></title>
    <link href="http://dubbs.github.io/blog/2014/12/05/how-to-flush-dns/"/>
    <updated>2014-12-05T10:59:20-06:00</updated>
    <id>http://dubbs.github.io/blog/2014/12/05/how-to-flush-dns</id>
    <content type="html"><![CDATA[<h2>WinXP</h2>

<p>Start > Run > <code>cmd</code></p>

<pre><code>ipconfig /flushdns
</code></pre>

<h2>Win7</h2>

<p>Start > Search programs and files > <code>cmd</code> > Right click > Run as administrator</p>

<pre><code>ipconfig /flushdns
</code></pre>

<h2>Win8</h2>

<p>Start Screen > <code>cmd</code> > Right click > Run as administrator</p>

<pre><code>ipconfig /flushdns
</code></pre>

<h2>IPhone</h2>

<p>Simply toggle &ldquo;Airplane Mode&rdquo;</p>

<h2>MAC OS X 10.7+</h2>

<pre><code>sudo killall -HUP mDNSResponder
</code></pre>

<h2>MAC OS X 10.6</h2>

<pre><code>sudo dscacheutil -flushcache
</code></pre>

<h2>MAC OS X 10.5.1</h2>

<pre><code>sudo lookupd -flushcache
</code></pre>

<h2>Linux</h2>

<pre><code>sudo /etc/init.d/nscd restart
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clear the DNS Cache]]></title>
    <link href="http://dubbs.github.io/blog/2014/09/04/clear-the-dns-cache/"/>
    <updated>2014-09-04T12:55:27-06:00</updated>
    <id>http://dubbs.github.io/blog/2014/09/04/clear-the-dns-cache</id>
    <content type="html"><![CDATA[<p>You&rsquo;ve updated <code>/etc/hosts</code> and your changes aren&rsquo;t reflected in Google Chrome.  Try clearing the DNS cache.</p>

<h2>Chrome</h2>

<p>Navigate to <code>chrome://net-internals/#dns</code> and click &ldquo;Clear Host Cache&rdquo;<br/>
Navigate to <code>chrome://net-internals/#sockets</code> and click &ldquo;Flush Socket Pools&rdquo;</p>

<h2>Mac OS X v10.6</h2>

<pre><code>sudo dscacheutil -flushcache
</code></pre>

<h2>Mac OS X v10.7+</h2>

<pre><code>sudo killall -HUP mDNSResponder
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Shell Modes and Init Files]]></title>
    <link href="http://dubbs.github.io/blog/2014/03/19/shell-modes-and-init-files/"/>
    <updated>2014-03-19T23:20:00-06:00</updated>
    <id>http://dubbs.github.io/blog/2014/03/19/shell-modes-and-init-files</id>
    <content type="html"><![CDATA[<h2>Modes</h2>

<p>There are two main shell modes:</p>

<h3>1. Login</h3>

<p>When a user logs in with a non-graphical interface or SSH.</p>

<h3>2. Interactive</h3>

<p>When a user has a prompt and standard in/out are connected to the terminal.</p>

<h2>Combinations of Modes</h2>

<p>A shell can be initialized with the following mode combinations:</p>

<h4>Login + Interactive</h4>

<p>You will be forwarded to the users home directory, with the users
environment.</p>

<ul>
<li>log in to a remote system via SSH</li>
<li>new terminal tab, Mac OS X</li>
<li><code>sudo su -</code></li>
</ul>


<p>files sourced:</p>

<pre><code># The systemwide initialization file
/etc/profile

# The personal initialization files, first one found, in order
~/.bash_profile
~/.bash_login
~/.profile
</code></pre>

<h4>Non-login + Interactive</h4>

<p>You will stay in the current directory, but will have the users
environment.</p>

<ul>
<li>new terminal tab, linux</li>
<li>start new shell process ($ bash)</li>
<li>execute script remotely and request terminal (ssh user@host -t &lsquo;echo $PWD&rsquo;)</li>
<li><code>sudo su</code></li>
</ul>


<p>files sourced:</p>

<pre><code># The individual per-interactive-shell startup file
~/.bashrc
</code></pre>

<h4>Non-login + Non-Interactive</h4>

<p>You will stay in the current directory and keep your current
environment.</p>

<ul>
<li>run an executable with #!/usr/bin/env bash shebang</li>
<li>run a script ($ bash test.sh)</li>
<li>execute script remotely (ssh user@host &lsquo;echo $PWD&rsquo;)</li>
</ul>


<p>files sourced:</p>

<pre><code>source $BASH_ENV
</code></pre>

<p>References:</p>

<ul>
<li><a href="http://linuxcommand.org/">Linux Command</a></li>
<li><a href="https://github.com/sstephenson/rbenv/wiki/Unix-shell-initialization">Unix Shell Initialization</a></li>
<li>[Switch User] (<a href="http://askubuntu.com/questions/376199/sudo-su-vs-sudo-i-vs-sudo-bin-bash-when-does-it-matter-which-is-used">http://askubuntu.com/questions/376199/sudo-su-vs-sudo-i-vs-sudo-bin-bash-when-does-it-matter-which-is-used</a>)</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Executing Shell Scripts]]></title>
    <link href="http://dubbs.github.io/blog/2014/03/18/executing-shell-scripts/"/>
    <updated>2014-03-18T23:53:00-06:00</updated>
    <id>http://dubbs.github.io/blog/2014/03/18/executing-shell-scripts</id>
    <content type="html"><![CDATA[<p>Here are some of the basic ways you can execute scripts on the command line.</p>

<p><code>source</code> or <code>.</code> will read and execute commands from filename in the <strong>current shell</strong> environment.<br/>
Any environment variables set within the script will remain after exit.</p>

<pre><code>. test.sh
source test.sh
</code></pre>

<p><code>sh</code> or <code>bash</code> will fork a <strong>new shell</strong> with the specified interpreter.</p>

<pre><code>sh test.sh
bash test.sh
</code></pre>

<p><code>./</code> will also fork a <strong>new shell</strong>, but the file needs to be set as executable and interpreter will be derived from the shebang (<code>#!/bin/sh</code>).</p>

<pre><code>chmod +x test.sh
./test.sh
</code></pre>
]]></content>
  </entry>
  
</feed>
